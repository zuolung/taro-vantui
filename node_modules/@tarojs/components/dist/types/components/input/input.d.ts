import { ComponentInterface, EventEmitter } from '../../stencil-public-runtime';
import { TaroEvent } from '../../../types';
export declare class Input implements ComponentInterface {
  private inputRef;
  private isOnComposition;
  private onInputExcuted;
  private fileListener;
  value: string;
  type: string;
  password: boolean;
  placeholder: string;
  disabled: boolean;
  maxlength: number;
  autoFocus: boolean;
  confirmType: string;
  name: string;
  nativeProps: {};
  _value: string;
  el: HTMLElement;
  watchHandler(newValue: string, oldValue: string): void;
  watchFocus(newValue: boolean, oldValue: boolean): void;
  onInput: EventEmitter;
  onFocus: EventEmitter;
  onBlur: EventEmitter;
  onConfirm: EventEmitter;
  onChange: EventEmitter;
  onKeyDown: EventEmitter;
  componentWillLoad(): void;
  componentDidLoad(): void;
  disconnectedCallback(): void;
  handleInput: (e: TaroEvent<HTMLInputElement>) => void;
  handleFocus: (e: TaroEvent<HTMLInputElement> & FocusEvent) => void;
  handleBlur: (e: TaroEvent<HTMLInputElement> & FocusEvent) => void;
  handleChange: (e: TaroEvent<HTMLInputElement>) => void;
  handleKeyDown: (e: TaroEvent<HTMLInputElement> & KeyboardEvent) => void;
  handleComposition: (e: any) => void;
  render(): any;
}
