{"version":3,"file":"pages/config-provider/index.js","sources":["webpack:///._src_pages_config-provider_index.js","webpack:///./src/pages/config-provider/index.js?579f"],"sourcesContent":["import { Block, View } from '@tarojs/components'\nimport React from 'react'\nimport Taro from '@tarojs/taro'\n\nimport {\n  ConfigProvider,\n  Rate,\n  Slider,\n  Field,\n  CellGroup,\n  Button,\n} from 'taro-vantui'\n\nimport DemoBlock from '../../components/demo-block/index'\n\nexport default class Index extends React.Component {\n  constructor() {\n    super()\n  }\n\n  state = {\n    rate: 4,\n    slider: 50,\n    themeVars: {\n      rateIconFullColor: '#07c160',\n      sliderBarHeight: '4px',\n      sliderButtonWidth: '20px',\n      sliderButtonHeight: '20px',\n      sliderActiveBackgroundColor: '#07c160',\n      buttonPrimaryBorderColor: '#07c160',\n      buttonPrimaryBackgroundColor: '#07c160',\n    },\n  }\n\n  onChange = (event) => {\n    const { key } = event.currentTarget.dataset\n    this.setState({\n      [key]: event.detail,\n    })\n  }\n\n  render() {\n    const { rate, slider, themeVars } = this.state\n    return (\n      <Block>\n        <DemoBlock title=\"默认主题\">\n          <CellGroup>\n            <Field\n              label=\"评分\"\n              renderInput={\n                <Block>\n                  <View style=\"width: 100%\">\n                    <Rate\n                      modelValue={rate}\n                      onChange={(e) => {\n                        this.onChange({\n                          detail: e.detail,\n                          currentTarget: {\n                            dataset: { key: 'rate' },\n                          },\n                          target: {\n                            dataset: { key: 'rate' },\n                          },\n                        })\n                      }}\n                    ></Rate>\n                  </View>\n                </Block>\n              }\n            ></Field>\n            <Field\n              label=\"滑块\"\n              border={false}\n              renderInput={\n                <Block>\n                  <View style=\"width: 100%\">\n                    <Slider\n                      value={slider}\n                      onChange={(e) => {\n                        this.onChange({\n                          detail: e.detail,\n                          currentTarget: {\n                            dataset: { key: 'slider' },\n                          },\n                          target: {\n                            dataset: { key: 'slider' },\n                          },\n                        })\n                      }}\n                    ></Slider>\n                  </View>\n                </Block>\n              }\n            ></Field>\n          </CellGroup>\n          <View style=\"margin: 16px\">\n            <Button round block type=\"primary\">\n              提交\n            </Button>\n          </View>\n        </DemoBlock>\n        <DemoBlock title=\"定制主题\">\n          <ConfigProvider themeVars={themeVars}>\n            <CellGroup>\n              <Field\n                label=\"评分\"\n                renderInput={\n                  <Block>\n                    <View style=\"width: 100%\">\n                      <Rate\n                        modelValue={rate}\n                        onChange={(e) => {\n                          this.onChange({\n                            detail: e.detail,\n                            currentTarget: {\n                              dataset: { key: 'rate' },\n                            },\n                            target: {\n                              dataset: { key: 'rate' },\n                            },\n                          })\n                        }}\n                      ></Rate>\n                    </View>\n                  </Block>\n                }\n              ></Field>\n              <Field\n                label=\"滑块\"\n                border={false}\n                renderInput={\n                  <Block>\n                    <View style=\"width: 100%\">\n                      <Slider\n                        value={slider}\n                        onChange={(e) => {\n                          this.onChange({\n                            detail: e.detail,\n                            currentTarget: {\n                              dataset: { key: 'slider' },\n                            },\n                            target: {\n                              dataset: { key: 'slider' },\n                            },\n                          })\n                        }}\n                      ></Slider>\n                    </View>\n                  </Block>\n                }\n              ></Field>\n            </CellGroup>\n            <View style=\"margin: 16px\">\n              <Button round block type=\"primary\">\n                提交\n              </Button>\n            </View>\n          </ConfigProvider>\n        </DemoBlock>\n      </Block>\n    )\n  }\n}\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/babel-loader/lib/index.js!./index.js\"\nvar config = {\"navigationBarTitleText\":\"ConfigProvider 全局配置\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages/config-provider/index', {root:{cn:[]}}, config || {}))\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AASA;;;;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAHA;AACA;AALA;AAmBA;AACA;AAAA;AApBA;AACA;AADA;AAEA;AACA;;;AAsBA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AAAA;AADA;AALA;AASA;AAZA;AADA;AADA;AAHA;AAwBA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AAAA;AADA;AALA;AASA;AAZA;AADA;AADA;AAJA;AAxBA;AAiDA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAlDA;AAwDA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AAAA;AADA;AALA;AASA;AAZA;AADA;AADA;AAHA;AAwBA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AAAA;AADA;AALA;AASA;AAZA;AADA;AADA;AAJA;AAxBA;AAiDA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAlDA;AADA;AAzDA;AAqHA;;;;AAlJA;AACA;;;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}