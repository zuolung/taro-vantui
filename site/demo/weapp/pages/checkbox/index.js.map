{"version":3,"file":"pages/checkbox/index.js","sources":["webpack:///._src_pages_checkbox_index.js","webpack:///./src/pages/checkbox/index.js?ec65","webpack:///._src_pages_checkbox_index.scss"],"sourcesContent":["import { Block } from '@tarojs/components'\nimport React from 'react'\nimport Taro from '@tarojs/taro'\nimport { Image, CheckboxGroup, Checkbox, CellGroup, Cell } from 'taro-vantui'\n\nimport DemoBlock from '../../components/demo-block/index'\nimport './index.scss'\n\nexport default class Index extends React.Component {\n  constructor() {\n    super()\n  }\n\n  state = {\n    checkbox1: true,\n    checkbox2: true,\n    checkbox3: true,\n    checkboxLabel: true,\n    checkboxSize: true,\n    checkboxShape: true,\n    list: ['a', 'b', 'c'],\n    result: ['a', 'b'],\n    result2: [],\n    result3: [],\n    result4: [],\n    activeIcon: 'https://img.yzcdn.cn/vant/user-active.png',\n    inactiveIcon: 'https://img.yzcdn.cn/vant/user-inactive.png',\n  }\n\n  onChange = (event) => {\n    const { key } = event.currentTarget.dataset\n    this.setState({ [key]: event.detail })\n  }\n\n  onClick = (event) => {\n    const { value } = event.currentTarget.dataset\n    this.setState({\n      radio3: value,\n    })\n  }\n\n  toggle = (event) => {\n    const { index, name } = event.currentTarget.dataset\n    const arr = this.state[name]\n    arr[index] = !arr[index]\n    this.setState({\n      [name]: arr,\n    })\n  }\n\n  noop = () => {}\n\n  render() {\n    const {\n      checkbox1,\n      checkboxShape,\n      checkbox2,\n      checkboxSize,\n      checkbox3,\n      activeIcon,\n      inactiveIcon,\n      checkboxLabel,\n      result,\n      list,\n      result4,\n      result2,\n      result3,\n    } = this.state\n    return (\n      <Block>\n        <DemoBlock title=\"基本用法\">\n          <Checkbox\n            value={checkbox1}\n            className=\"demo-checkbox\"\n            onChange={(e) => {\n              this.onChange({\n                detail: e.detail,\n                currentTarget: {\n                  dataset: { key: 'checkbox1' },\n                },\n                target: {\n                  dataset: { key: 'checkbox1' },\n                },\n              })\n            }}\n          >\n            复选框\n          </Checkbox>\n        </DemoBlock>\n        <DemoBlock title=\"禁用状态\">\n          <Checkbox disabled value={false} className=\"demo-checkbox\">\n            复选框\n          </Checkbox>\n          <Checkbox disabled value={true} className=\"demo-checkbox\">\n            复选框\n          </Checkbox>\n        </DemoBlock>\n        <DemoBlock title=\"自定义形状\">\n          <Checkbox\n            value={checkboxShape}\n            shape=\"square\"\n            className=\"demo-checkbox\"\n            onChange={(e) => {\n              this.onChange({\n                detail: e.detail,\n                currentTarget: {\n                  dataset: { key: 'checkboxShape' },\n                },\n                target: {\n                  dataset: { key: 'checkboxShape' },\n                },\n              })\n            }}\n          >\n            复选框\n          </Checkbox>\n        </DemoBlock>\n        <DemoBlock title=\"自定义颜色\">\n          <Checkbox\n            value={checkbox2}\n            checkedColor=\"#07c160\"\n            className=\"demo-checkbox\"\n            onChange={(e) => {\n              this.onChange({\n                detail: e.detail,\n                currentTarget: {\n                  dataset: { key: 'checkbox2' },\n                },\n                target: {\n                  dataset: { key: 'checkbox2' },\n                },\n              })\n            }}\n          >\n            复选框\n          </Checkbox>\n        </DemoBlock>\n        <DemoBlock title=\"自定义大小\">\n          <Checkbox\n            iconSize=\"25px\"\n            value={checkboxSize}\n            className=\"demo-checkbox\"\n            onChange={(e) => {\n              this.onChange({\n                detail: e.detail,\n                currentTarget: {\n                  dataset: { key: 'checkboxSize' },\n                },\n                target: {\n                  dataset: { key: 'checkboxSize' },\n                },\n              })\n            }}\n          >\n            复选框\n          </Checkbox>\n        </DemoBlock>\n        <DemoBlock title=\"自定义图标\">\n          <Checkbox\n            useIconSlot\n            value={checkbox3}\n            className=\"demo-checkbox\"\n            onChange={(e) => {\n              this.onChange({\n                detail: e.detail,\n                currentTarget: {\n                  dataset: { key: 'checkbox3' },\n                },\n                target: {\n                  dataset: { key: 'checkbox3' },\n                },\n              })\n            }}\n            renderIcon={\n              <Block>\n                <Image\n                  className=\"icon\"\n                  mode=\"widthFix\"\n                  src={checkbox3 ? activeIcon : inactiveIcon}\n                ></Image>\n              </Block>\n            }\n          >\n            自定义图标\n          </Checkbox>\n        </DemoBlock>\n        <DemoBlock title=\"禁用文本点击\">\n          <Checkbox\n            labelDisabled\n            value={checkboxLabel}\n            className=\"demo-checkbox\"\n            onChange={(e) => {\n              this.onChange({\n                detail: e.detail,\n                currentTarget: {\n                  dataset: { key: 'checkboxLabel' },\n                },\n                target: {\n                  dataset: { key: 'checkboxLabel' },\n                },\n              })\n            }}\n          >\n            复选框\n          </Checkbox>\n        </DemoBlock>\n        <DemoBlock title=\"复选框组\">\n          <CheckboxGroup\n            value={result}\n            onChange={(e) => {\n              this.onChange({\n                detail: e.detail,\n                currentTarget: {\n                  dataset: { key: 'result' },\n                },\n                target: {\n                  dataset: { key: 'result' },\n                },\n              })\n            }}\n          >\n            {list.map((item, index) => {\n              return (\n                <Checkbox key={item} name={item} className=\"demo-checkbox\">\n                  {'复选框 ' + item}\n                </Checkbox>\n              )\n            })}\n          </CheckboxGroup>\n        </DemoBlock>\n        <DemoBlock title=\"水平排列\">\n          <CheckboxGroup\n            direction=\"horizontal\"\n            value={result4}\n            onChange={(e) => {\n              this.onChange({\n                detail: e.detail,\n                currentTarget: {\n                  dataset: { key: 'result4' },\n                },\n                target: {\n                  dataset: { key: 'result4' },\n                },\n              })\n            }}\n          >\n            {list.map((item, index) => {\n              return (\n                <Checkbox key={item} name={item} className=\"demo-checkbox\">\n                  {'复选框 ' + item}\n                </Checkbox>\n              )\n            })}\n          </CheckboxGroup>\n        </DemoBlock>\n        <DemoBlock title=\"限制最大可选数\">\n          <CheckboxGroup\n            value={result2}\n            max=\"2\"\n            onChange={(e) => {\n              this.onChange({\n                detail: e.detail,\n                currentTarget: {\n                  dataset: { key: 'result2' },\n                },\n                target: {\n                  dataset: { key: 'result2' },\n                },\n              })\n            }}\n          >\n            {list.map((item, index) => {\n              return (\n                <Checkbox key={item} name={item} className=\"demo-checkbox\">\n                  {'复选框 ' + item}\n                </Checkbox>\n              )\n            })}\n          </CheckboxGroup>\n        </DemoBlock>\n        <DemoBlock title=\"搭配单元格组件使用\">\n          <CheckboxGroup value={result3} data-key=\"result3\">\n            <CellGroup>\n              {list.map((item, index) => {\n                return (\n                  <Cell\n                    key={item}\n                    title={'复选框 ' + item}\n                    valueClass=\"value-class\"\n                    clickable\n                    data-index={index}\n                    data-name=\"result3\"\n                  >\n                    <Checkbox\n                      value={result3[index]}\n                      onChange={(event) => {\n                        this.toggle({\n                          detail: e.detail,\n                          currentTarget: {\n                            dataset: { index: index, name: 'result3' },\n                          },\n                          target: {\n                            dataset: { index: index, name: 'result3' },\n                          },\n                        })\n                      }}\n                      className={'checkboxes-' + index}\n                      name={item}\n                    />\n                  </Cell>\n                )\n              })}\n            </CellGroup>\n          </CheckboxGroup>\n        </DemoBlock>\n      </Block>\n    )\n  }\n}\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/babel-loader/lib/index.js!./index.js\"\nvar config = {\"navigationBarTitleText\":\"Checkbox 复选框\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages/checkbox/index', {root:{cn:[]}}, config || {}))\n\n","// extracted by mini-css-extract-plugin"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AACA;;;;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AACA;AALA;AAqBA;AACA;AAAA;AAtBA;AACA;AADA;AA0BA;AACA;AAAA;AACA;AADA;AA3BA;AACA;AADA;AAiCA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AApCA;AACA;AADA;AACA;AADA;AAEA;AACA;;;AAwCA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AAAA;AADA;AALA;AAJA;AAAA;AAAA;AADA;AAmBA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAJA;AAQA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AAAA;AADA;AALA;AALA;AAAA;AAAA;AADA;AAoBA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AAAA;AADA;AALA;AALA;AAAA;AAAA;AADA;AAoBA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AAAA;AADA;AALA;AALA;AAAA;AAAA;AADA;AAoBA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AAAA;AADA;AALA;AALA;AAeA;AACA;AAEA;AACA;AACA;AAHA;AADA;AAhBA;AAAA;AADA;AA6BA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AAAA;AADA;AALA;AALA;AAAA;AAAA;AADA;AAoBA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AAAA;AADA;AALA;AAHA;AAAA;AAeA;AACA;AAAA;AAAA;AAAA;AAFA;AAdA;AADA;AAwBA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AAAA;AADA;AALA;AAJA;AAAA;AAgBA;AACA;AAAA;AAAA;AAAA;AAFA;AAfA;AADA;AAyBA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AAAA;AADA;AALA;AAJA;AAAA;AAgBA;AACA;AAAA;AAAA;AAAA;AAFA;AAfA;AADA;AAyBA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AADA;AALA;AAHA;AAaA;AACA;AAdA;AARA;AAFA;AADA;AADA;AADA;AAnNA;AAwPA;;;;AArTA;AACA;;;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;;;;A","sourceRoot":""}