{"version":3,"file":"pages/datetime-picker/index.js","sources":["webpack:///._src_pages_datetime-picker_index.js","webpack:///._node_modules_core-js_modules_es.array.filter.js","webpack:///./src/pages/datetime-picker/index.js?755e","webpack:///._src_pages_datetime-picker_index.scss"],"sourcesContent":["import { Block } from '@tarojs/components'\nimport React from 'react'\nimport Taro from '@tarojs/taro'\n\nimport { DatetimePicker, Toast, toast } from 'taro-vantui'\n\nimport DemoBlock from '../../components/demo-block/index'\nimport './index.scss'\n\nexport default class Index extends React.Component {\n  constructor() {\n    super()\n  }\n\n  state = {\n    minHour: 10,\n    maxHour: 20,\n    minDate: new Date(2018, 0, 1).getTime(),\n    maxDate: new Date(2019, 10, 1).getTime(),\n    currentDate1: new Date(2018, 2, 31).getTime(),\n    currentDate2: null,\n    currentDate3: new Date(2018, 0, 1),\n    currentDate4: '12:00',\n    loading: false,\n  }\n\n  formatter = (type, value) => {\n    if (type === 'year') {\n      return `${value}年`\n    }\n    if (type === 'month') {\n      return `${value}月`\n    }\n    return value\n  }\n\n  filter = (type, options) => {\n    if (type === 'minute') {\n      return options.filter((option) => option % 5 === 0)\n    }\n\n    return options\n  }\n\n  onInput = (event) => {\n    const { detail, currentTarget } = event\n    console.info(event)\n    const result = this.getResult(detail, currentTarget.dataset.type)\n\n    toast(result)\n  }\n\n  getResult = (time, type) => {\n    const date = new Date(time)\n    switch (type) {\n      case 'datetime':\n        return date.toLocaleString()\n      case 'date':\n        return date.toLocaleDateString()\n      case 'year-month':\n        return `${date.getFullYear()}/${date.getMonth() + 1}`\n      case 'time':\n        return time\n      default:\n        return ''\n    }\n  }\n\n  render() {\n    const {\n      loading,\n      currentDate1,\n      minDate,\n      currentDate2,\n      currentDate3,\n      currentDate4,\n      minHour,\n      maxHour,\n    } = this.state\n    return (\n      <Block>\n        <DemoBlock title=\"选择完整时间\">\n          <DatetimePicker\n            type=\"datetime\"\n            loading={loading}\n            value={currentDate1}\n            minDate={minDate}\n            onInput={(e) => {\n              this.onInput({\n                detail: e.detail,\n                currentTarget: {\n                  dataset: { type: 'datetime' },\n                },\n                target: {\n                  dataset: { type: 'datetime' },\n                },\n              })\n            }}\n          ></DatetimePicker>\n        </DemoBlock>\n        <DemoBlock title=\"选择日期（年月日）\">\n          <DatetimePicker\n            type=\"date\"\n            value={currentDate2}\n            minDate={minDate}\n            onInput={(e) => {\n              this.onInput({\n                detail: e.detail,\n                currentTarget: {\n                  dataset: { type: 'date' },\n                },\n                target: {\n                  dataset: { type: 'date' },\n                },\n              })\n            }}\n            formatter={this.formatter}\n          ></DatetimePicker>\n        </DemoBlock>\n        <DemoBlock title=\"选择日期（年月）\">\n          <DatetimePicker\n            type=\"year-month\"\n            value={currentDate3}\n            minDate={minDate}\n            onInput={(e) => {\n              this.onInput({\n                detail: e.detail,\n                currentTarget: {\n                  dataset: { type: 'year-month' },\n                },\n                target: {\n                  dataset: { type: 'year-month' },\n                },\n              })\n            }}\n          ></DatetimePicker>\n        </DemoBlock>\n        <DemoBlock title=\"选择时间\">\n          <DatetimePicker\n            type=\"time\"\n            value={currentDate4}\n            minHour={minHour}\n            maxHour={maxHour}\n            onInput={(e) => {\n              this.onInput({\n                detail: e.detail,\n                currentTarget: {\n                  dataset: { type: 'time' },\n                },\n                target: {\n                  dataset: { type: 'time' },\n                },\n              })\n            }}\n          ></DatetimePicker>\n        </DemoBlock>\n        <DemoBlock title=\"选项过滤器\">\n          <DatetimePicker\n            type=\"time\"\n            value={currentDate4}\n            filter={this.filter}\n          ></DatetimePicker>\n        </DemoBlock>\n        <Toast id=\"van-toast\"></Toast>\n      </Block>\n    )\n  }\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar $filter = require('../internals/array-iteration').filter;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');\n\n// `Array.prototype.filter` method\n// https://tc39.es/ecma262/#sec-array.prototype.filter\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/babel-loader/lib/index.js!./index.js\"\nvar config = {\"navigationBarTitleText\":\"DatetimePicker 时间选择\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages/datetime-picker/index', {root:{cn:[]}}, config || {}))\n\n","// extracted by mini-css-extract-plugin"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AAEA;AACA;;;;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AACA;AALA;AAiBA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAvBA;AACA;AADA;AA2BA;AACA;AAAA;AAAA;AACA;AACA;AACA;AA/BA;AACA;AADA;AAmCA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAvCA;AACA;AADA;AA2CA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAVA;AA5CA;AACA;AADA;AAEA;AACA;;;AAuDA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AAAA;AADA;AALA;AASA;AAfA;AADA;AAmBA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AAAA;AADA;AALA;AALA;AAeA;AAfA;AADA;AAmBA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AAAA;AADA;AALA;AASA;AAdA;AADA;AAkBA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AAAA;AADA;AALA;AASA;AAfA;AADA;AAmBA;AAAA;AAEA;AACA;AACA;AAHA;AADA;AAOA;AAAA;AAnFA;AAsFA;;;;AA7JA;AACA;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;;;;A","sourceRoot":""}