"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.customVueChain = void 0;
const helper_1 = require("@tarojs/helper");
const template_1 = require("@tarojs/shared/dist/template");
const component_1 = require("../template/component");
const CUSTOM_WRAPPER = 'custom-wrapper';
function customVueChain(chain) {
    let vueLoaderPath;
    try {
        vueLoaderPath = require.resolve('vue-loader', {
            paths: [process.cwd()]
        });
    }
    catch (error) {
        console.log(helper_1.chalk.yellow('找不到 vue-loader，请先安装。'));
        process.exit(1);
    }
    const { VueLoaderPlugin } = require(vueLoaderPath);
    chain
        .plugin('vueLoaderPlugin')
        .use(VueLoaderPlugin);
    chain.module
        .rule('vue')
        .test(helper_1.REG_VUE)
        .use('vueLoader')
        .loader(vueLoaderPath)
        .options({
        optimizeSSR: false,
        transformAssetUrls: {
            video: ['src', 'poster'],
            'live-player': 'src',
            audio: 'src',
            source: 'src',
            image: 'src',
            'cover-image': 'src'
        },
        compilerOptions: {
            whitespace: 'condense',
            modules: [{
                    preTransformNode(el) {
                        const nodeName = el.tag;
                        if (template_1.capitalize(template_1.toCamelCase(nodeName)) in template_1.internalComponents) {
                            component_1.componentConfig.includes.add(nodeName);
                        }
                        if (nodeName === CUSTOM_WRAPPER) {
                            component_1.componentConfig.thirdPartyComponents.set(CUSTOM_WRAPPER, new Set());
                        }
                        const usingComponent = component_1.componentConfig.thirdPartyComponents.get(nodeName);
                        if (usingComponent != null) {
                            el.attrsList
                                .filter(a => !a.dynamic)
                                .forEach(a => usingComponent.add(a.name.startsWith(':') ? a.name.slice(1) : a.name));
                        }
                        return el;
                    }
                }]
        }
    });
}
exports.customVueChain = customVueChain;
//# sourceMappingURL=vue.js.map